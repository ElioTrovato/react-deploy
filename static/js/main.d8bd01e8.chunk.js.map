{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","App","state","currentItem","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","console","log","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAAe,I,kBC0BAA,MAvBf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAEzC,sBAAMO,QAAS,WACXf,EAAMgB,WAAWZ,EAAKI,MAD1B,mBAL0BJ,EAAKI,QAc3C,OAAO,8BACFP,KCgEMgB,E,kDA9EX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACThB,MAAO,GACPiB,YAAa,CACTT,KAAM,GACNF,IAAK,KAGb,EAAKY,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAClB,EAAKR,UAAY,EAAKA,UAAUQ,KAAf,gBAZF,E,2CAcnB,SAAQT,GACJA,EAAEW,iBACF,IAAMC,EAAUC,KAAKP,MAAMC,YAC3B,GAAqB,KAAjBK,EAAQd,KAAa,CACrB,IAAMR,EAAK,sBAAOuB,KAAKP,MAAMhB,OAAlB,CAAyBsB,IACpCC,KAAKC,SAAS,CACVxB,MAAOA,EACPiB,YAAa,CACTT,KAAM,GACNF,IAAK,S,yBAKrB,SAAYI,GACRa,KAAKC,SAAS,CACVP,YAAa,CACTT,KAAME,EAAEE,OAAOL,MACfD,IAAKmB,KAAKC,W,wBAItB,SAAWpB,GACP,IAAMqB,EAAgBJ,KAAKP,MAAMhB,MAAM4B,QAAO,SAAA1B,GAAI,OAC9CA,EAAKI,MAAQA,KACjBiB,KAAKC,SAAS,CACVxB,MAAO2B,M,uBAIf,SAAUnB,EAAMF,GACZuB,QAAQC,IAAI,SAAWP,KAAKP,MAAMhB,OAClC,IAAMA,EAAQuB,KAAKP,MAAMhB,MACzBA,EAAMC,KAAI,SAAAC,GACFA,EAAKI,MAAQA,IACbuB,QAAQC,IAAI5B,EAAKI,IAAM,OAASA,GAChCJ,EAAKM,KAAOA,MAGpBe,KAAKC,SAAS,CACVxB,MAAOA,M,oBAKf,WACI,OACI,qBAAKG,UAAU,MAAf,SACI,mCACI,uBAAME,GAAG,aAAa0B,SAAUR,KAAKL,QAArC,UACI,uBAAOd,KAAK,OAAO4B,YAAY,aAAazB,MAAOgB,KAAKP,MAAMC,YAAYT,KAAMC,SAAUc,KAAKH,cAC/F,wBAAQhB,KAAK,SAAb,oBAEJ,4BAAImB,KAAKP,MAAMhB,MAAMQ,OAErB,cAAC,EAAD,CAAWR,MAAOuB,KAAKP,MAAMhB,MAAOc,WAAYS,KAAKT,WAAYH,UAAWY,KAAKZ,qB,GAtEnFsB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d8bd01e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.text} onChange={(e) => {\r\n                    props.setUpdate(e.target.value, item.key)\r\n                }} />\r\n                <span onClick={() => {\r\n                    props.deleteItem(item.key)\r\n                }} >\r\n                    X\r\n                </span>\r\n            </p>\r\n\r\n        </div>\r\n    })\r\n    return <div>\r\n        {listItems}\r\n\r\n    </div>;\r\n}\r\n\r\nexport default ListItems;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ListItems from './ListItems'\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            currentItem: {\r\n                text: '',\r\n                key: ''\r\n            }\r\n        }\r\n        this.addItem = this.addItem.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n    }\r\n    addItem(e) {\r\n        e.preventDefault();\r\n        const newItem = this.state.currentItem;\r\n        if (newItem.text !== \"\") {\r\n            const items = [...this.state.items, newItem];\r\n            this.setState({\r\n                items: items,\r\n                currentItem: {\r\n                    text: '',\r\n                    key: ''\r\n                }\r\n            })\r\n        }\r\n    }\r\n    handleInput(e) {\r\n        this.setState({\r\n            currentItem: {\r\n                text: e.target.value,\r\n                key: Date.now()\r\n            }\r\n        })\r\n    }\r\n    deleteItem(key) {\r\n        const filteredItems = this.state.items.filter(item =>\r\n            item.key !== key);\r\n        this.setState({\r\n            items: filteredItems\r\n        })\r\n\r\n    }\r\n    setUpdate(text, key) {\r\n        console.log(\"items:\" + this.state.items);\r\n        const items = this.state.items;\r\n        items.map(item => {\r\n            if (item.key === key) {\r\n                console.log(item.key + \"    \" + key)\r\n                item.text = text;\r\n            }\r\n        })\r\n        this.setState({\r\n            items: items\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <form id=\"to-do-form\" onSubmit={this.addItem}>\r\n                        <input type=\"text\" placeholder=\"Enter task\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\r\n                        <button type=\"submit\">Add</button>\r\n                    </form>\r\n                    <p>{this.state.items.text}</p>\r\n\r\n                    <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\r\n\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}